Học liệu và Thực hành cho Phần 1 - Cơ sở về Học máy và Học sâu

I. Sách Lý thuyết: cho phần học máy và học sâu cơ bản (mua, hoặc tìm trên Internet có):
- Tiếng Anh
1. Introduction to Machine Learning with Python, Andreas C. Müller & Sarah Guido, 2017.
2. Deep Learning with Python, François Chollet, 2017
- Tiếng Việt:
1. Giáo trình nhập môn Trí tuệ nhân tạo
    https://github.com/0xl4p/Giao-Trinh-PTIT/blob/main/Nh%E1%BA%ADp%20m%C3%B4n%20tr%C3%AD%20tu%E1%BB%87%20nh%C3%A2n%20t%E1%BA%A1o%20-%202015.pdf
2. Học máy cơ bản
    https://machinelearningcoban.com/
    Tham khảo cho các khái niệm về học máy, thuật toán học máy, học sâu cơ bản, các kỹ thuật xử lý dữ liệu và độ đo, đánh giá hiệu năng.
3. Khoa học dữ liệu - Khanh's blog
    Tham khảo cho các khái niệm về học máy, thuật toán học máy, học sâu cơ bản, các kỹ thuật xử lý dữ liệu và độ đo, đánh giá hiệu năng.
4. Sách Đắm mình vào học sâu/ Dive into Deep Learning
    https://vi.d2l.ai/

II. Hướng dẫn thực hành:
1. Thực hành các thư viện:
- Numpy:
    https://ml-course.github.io/master/notebooks/Tutorial%202%20-%20Python%20for%20Data%20Analysis.html#numpy
- Pandas:
    https://ml-course.github.io/master/notebooks/Tutorial%202%20-%20Python%20for%20Data%20Analysis.html#pandas

2. Thực hành các mô hình học máy cơ bản
- Các mô hình học máy
    Load dữ liệu và thử bộ phân lớp Naive Bayes
    https://scipy-lectures.org/packages/scikit-learn/auto_examples/plot_iris_knn.html#sphx-glr-packages-scikit-learn-auto-examples-plot-iris-knn-py
    https://scipy-lectures.org/packages/scikit-learn/#supervised-learning-classification-of-handwritten-digits
- Thử nghiệm các bộ phân lớp với nhiều tham số khác nhau:
    https://scipy-lectures.org/packages/scikit-learn/auto_examples/plot_compare_classifiers.html#sphx-glr-packages-scikit-learn-auto-examples-plot-compare-classifiers-py
- Các kỹ thuật Tiền xử lý và tối ưu
    https://ml-course.github.io/master/notebooks/06%20-%20Data%20Preprocessing.html
- Tối ưu hiệu năng mô hình học máy theo các cách phân chia dữ liệu và độ đo khác nhau.
    https://ml-course.github.io/master/notebooks/04%20-%20Model%20Selection.html#performance-estimation-techniques
- Đánh giá hiệu năng mô hình học máy theo các độ đo khác nhau.
    https://ml-course.github.io/master/notebooks/04%20-%20Model%20Selection.html#evaluation-metrics-for-classification
- Tối ưu tham số mô hình với Gridsearch
	https://github.com/justmarkham/scikit-learn-videos/blob/master/08_grid_search.ipynb

3. Thực hành học sâu
- Thực hành mạng nơ ron với MNIST dataset
    https://ml-course.github.io/master/notebooks/08%20-%20Neural%20Networks.html#neural-networks-in-practice
- Thực hành MLP trong scikit learn và Keras. Finetune tham số sử dụng keras tuner
    https://github.com/ageron/handson-ml3/blob/main/10_neural_nets_with_keras.ipynb
- Thực hành mạng CNN
    https://ml-course.github.io/master/notebooks/09%20-%20Convolutional%20Neural%20Networks.html#convolutional-nets-in-practice

4. Mini Project cho Phần 1: (Sử dụng Jupyter notebook để viết báo cáo và thử nghiệm)
- Chọn 1 tập dữ liệu /bài toán trong thực tế
- Thử nghiệm các kiến thức học máy cơ bản để xây dựng mô hình, tối ưu hiệu năng, với các bước:
    + Xác định bài toán học máy phù hợp
    + Phân tích, khai phá dữ liệu
    + Thử nghiệm mô hình với các kĩ thuật đã học
    + Thử train toàn bộ tập dữ liệu với mô hình, đánh giá khả năng mô hình, độ phù hợp của dữ liệu
    + Train/test và đánh giá mô hình
    + K cross validation tốt hơn train test split như nào?
    + Thử nghiệm các phương pháp tiền xử lý dữ liệu. Phân tích, đánh giá khả năng áp dụng từng kĩ thuật.
    + Thử nghiệm kĩ thuật lựa chọn đặc trưng và đưa ra tập đặc trưng
    + Thử nghiệm các phương pháp xử lý dữ liệu mất cân bằng (nếu dữ liệu mất cân bằng)
    + Thử nghiệm các độ đo phân lớp
    + Thử nghiệm các mô hình khác trên tập dữ liệu
    + Gridsearch để tự động tìm tham số tối ưu cho các mô hình?
- Thử nghiệm tương tự với mô hình học sâu